{"ast":null,"code":"export var AppState;(function(AppState){AppState[\"IS_LOADING\"]=\"IS_LOADING\";AppState[\"ERROR\"]=\"ERROR\";AppState[\"SHOW_ALL\"]=\"SHOW_ALL\";AppState[\"SHOW_AONB_AREA\"]=\"SHOW_AONB_AREA\";AppState[\"SHOW_INFO_BAR\"]=\"SHOW_INFO_BAR\";AppState[\"SET_DATA\"]=\"SET_DATA\";AppState[\"SET_ROUTES\"]=\"SET_ROUTES\";AppState[\"SET_CATEGORIES\"]=\"SET_CATEGORIES\";AppState[\"SET_ROUTE_CATEGORIES\"]=\"SET_ROUTE_CATEGORIES\";AppState[\"ACTIVE_MARKER_CATEGORIES\"]=\"ACTIVE_MARKER_CATEGORIES\";AppState[\"ACTIVE_ROUTE_CATEGORIES\"]=\"ACTIVE_ROUTE_CATEGORIES\";AppState[\"MAP_REF\"]=\"MAP_REF\";AppState[\"CONTAINER_REF\"]=\"CONTAINER_REF\";})(AppState||(AppState={}));","map":{"version":3,"names":["AppState"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/utils/types.ts"],"sourcesContent":["import { LatLngExpression } from 'leaflet'\n\nexport enum AppState {\n  IS_LOADING = 'IS_LOADING',\n  ERROR = 'ERROR',\n  SHOW_ALL = 'SHOW_ALL',\n  SHOW_AONB_AREA = 'SHOW_AONB_AREA',\n  SHOW_INFO_BAR = 'SHOW_INFO_BAR',\n  SET_DATA = 'SET_DATA',\n  SET_ROUTES = 'SET_ROUTES',\n  SET_CATEGORIES = 'SET_CATEGORIES',\n  SET_ROUTE_CATEGORIES = 'SET_ROUTE_CATEGORIES',\n  ACTIVE_MARKER_CATEGORIES = 'ACTIVE_MARKER_CATEGORIES',\n  ACTIVE_ROUTE_CATEGORIES = 'ACTIVE_ROUTE_CATEGORIES',\n  MAP_REF = 'MAP_REF',\n  CONTAINER_REF = 'CONTAINER_REF',\n}\n\nexport type StateContextT = {\n  state: State\n}\n\nexport type DispatchContextT = {\n  dispatch: React.Dispatch<any>\n}\n\nexport type State = {\n  loading: boolean\n  error: boolean\n  markerData: MarkerEntity[]\n  routeData: RouteEntity[]\n  categoryData: TaxonomyEntity[]\n  routeCategoryData: TaxonomyEntity[]\n  activeMarkerFilters: number[]\n  activeRouteFilters: number[]\n  showAonbArea: boolean\n  infoBarContent: null | MarkerEntity | RouteEntity\n  mapRef: null | React.RefObject<HTMLElement>\n  containerRef: null | React.RefObject<HTMLElement>\n}\n\nexport type StateAction = {\n  type: AppState\n  mode: any\n}\n\nexport interface MapEntity {\n  link?: string | LinkEntity\n  links?: LinkEntity[]\n  summary?: string\n  content?: string\n  distance?: string\n  postcode?: string\n  accessibility_terrain_walk_info?: string\n  facilities_accessibility?: string\n  id: number\n  title: string\n  image?: undefined | string\n  imageAlt?: undefined | string\n  categories?: number[] | null\n  download?: string\n}\n\nexport interface MarkerEntity extends MapEntity {\n  lat: string\n  lng: string\n  position: LatLngExpression\n}\n\nexport interface RouteEntity extends MapEntity {\n  shape_file?: string\n}\n\nexport interface LinkEntity {\n  title: string\n  url: string\n  target: string\n}\n\nexport interface TaxonomyEntity {\n  tid: number\n  name: string\n  parent: number\n  children: TaxonomyEntity[]\n  route_colour?: string\n}\n\nexport interface Icon {\n  tid: number\n  icon: string\n}\n"],"mappings":"AAEA,UAAYA,SAAZ,C,UAAYA,Q,EAAAA,Q,4BAAAA,Q,kBAAAA,Q,wBAAAA,Q,oCAAAA,Q,kCAAAA,Q,wBAAAA,Q,4BAAAA,Q,oCAAAA,Q,gDAAAA,Q,wDAAAA,Q,sDAAAA,Q,sBAAAA,Q,qCAAAA,Q,GAAAA,Q"},"metadata":{},"sourceType":"module"}