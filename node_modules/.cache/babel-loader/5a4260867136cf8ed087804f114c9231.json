{"ast":null,"code":"var _jsxFileName = \"/Users/harryedwards/Work/FL/_examples/mapping/src/components/routes/Routes.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { StateContext } from '../../MapApp';\nimport Route from './Route';\nimport useFilters from '../../hooks/useFilters';\n/**\n * Map routes\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Routes() {\n  _s();\n\n  const {\n    state\n  } = useContext(StateContext);\n  const {\n    routeData,\n    activeRouteFilters\n  } = state; // Get filtered results based on state\n\n  const results = useFilters(routeData, activeRouteFilters);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: results.map(route => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        route: route\n      }, route.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(Routes, \"RxKIwnmWnl0YRaBH4v8zGP2vdF4=\", false, function () {\n  return [useFilters];\n});\n\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"names":["useContext","StateContext","Route","useFilters","Routes","state","routeData","activeRouteFilters","results","map","route","id"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/components/routes/Routes.tsx"],"sourcesContent":["import { useContext } from 'react'\nimport { StateContext } from '../../MapApp'\nimport { RouteEntity, StateContextT } from '../../utils/types'\nimport Route from './Route'\nimport useFilters from '../../hooks/useFilters'\n\n/**\n * Map routes\n */\nexport default function Routes() {\n  const { state } = useContext(StateContext) as StateContextT\n  const { routeData, activeRouteFilters } = state\n\n  // Get filtered results based on state\n  const results = useFilters(routeData, activeRouteFilters)\n\n  return (\n    <>\n      {results.map(route => {\n        return <Route key={route.id} route={route} />\n      })}\n    </>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA;AACA;AACA;;;;AACA,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAC/B,MAAM;IAAEC;EAAF,IAAYL,UAAU,CAACC,YAAD,CAA5B;EACA,MAAM;IAAEK,SAAF;IAAaC;EAAb,IAAoCF,KAA1C,CAF+B,CAI/B;;EACA,MAAMG,OAAO,GAAGL,UAAU,CAACG,SAAD,EAAYC,kBAAZ,CAA1B;EAEA,oBACE;IAAA,UACGC,OAAO,CAACC,GAAR,CAAYC,KAAK,IAAI;MACpB,oBAAO,QAAC,KAAD;QAAsB,KAAK,EAAEA;MAA7B,GAAYA,KAAK,CAACC,EAAlB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFA;EADH,iBADF;AAOD;;GAduBP,M;UAKND,U;;;KALMC,M"},"metadata":{},"sourceType":"module"}