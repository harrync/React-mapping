{"ast":null,"code":"var _jsxFileName = \"/Users/harryedwards/Work/FL/_examples/mapping/src/components/filters/MarkerCategory.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { htmlDecode } from '../../helpers';\nimport { DispatchContext, StateContext } from '../../MapApp';\nimport Button from '../../ui/Button';\nimport { AppState } from '../../utils/types';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { markerIcons } from '../../data/markerIcons';\nimport updateActiveCategories from '../../hooks/updateActiveCategories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/**\n * Top level marker categories, rendering out the parent & child categories\n */\nexport default function MarkerCategory(_ref) {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const [currentTids, setCurrentTids] = useState([]);\n  const [isSelected, setIsSelected] = useState(false);\n  const {\n    dispatch\n  } = useContext(DispatchContext);\n  const {\n    state\n  } = useContext(StateContext);\n  const {\n    activeMarkerFilters,\n    mapRef\n  } = state;\n  useEffect(() => {\n    // If a tid from this cateogry is in state, set selected class to category toggle\n    const isCategorySelected = currentTids.filter(tid => {\n      const tidsMatch = currentTids.length > 0 || tid.filter(term => {\n        return activeMarkerFilters.includes(term);\n      }).length;\n      return tidsMatch !== undefined;\n    });\n    setIsSelected(isCategorySelected.length > 0 ? true : false); // If no filters are selected, reset state to intital\n\n    if (activeMarkerFilters.length === 0) {\n      setIsSelected(false);\n      setCurrentTids([]);\n    }\n  }, [activeMarkerFilters, currentTids]); // Hide/show category buttons\n\n  function handleToggleCategory() {\n    setOpen(!open);\n  }\n\n  function handleParentCategoryFilter(tid, children) {\n    // Get child term IDs as array to cross reference against state\n    const childTids = children.map(term => term.tid); // If child terms are present, remove them\n\n    const childrenToRemove = activeMarkerFilters.filter(function (el) {\n      return childTids.includes(el);\n    }); // Remove child TIDs from state - look in to more performant way to achieve this\n\n    if (childrenToRemove.length > 0) childrenToRemove.forEach(tid => {\n      dispatch({\n        type: AppState.ACTIVE_MARKER_CATEGORIES,\n        mode: tid\n      });\n    }); // Add parent TID to state\n\n    dispatch({\n      type: AppState.ACTIVE_MARKER_CATEGORIES,\n      mode: tid\n    }); // Toggle category in/out of state to manage parent button selected state\n\n    const updatedTids = updateActiveCategories(tid, currentTids, mapRef);\n    setCurrentTids(updatedTids);\n  }\n\n  function handleChildCategoryFilter(childTid, parentTid) {\n    // Check if parent TID is in state, if so, remove it\n    if (activeMarkerFilters.includes(parentTid)) {\n      dispatch({\n        type: AppState.ACTIVE_MARKER_CATEGORIES,\n        mode: parentTid\n      });\n    } // Add child TID to state\n\n\n    dispatch({\n      type: AppState.ACTIVE_MARKER_CATEGORIES,\n      mode: childTid\n    }); // Toggle category in/out of state to manage parent button selected state\n\n    const updatedTids = updateActiveCategories(childTid, currentTids, mapRef);\n    setCurrentTids(updatedTids);\n  }\n\n  function checkHasIcon(term) {\n    const hasIcon = markerIcons.filter(icon => term.tid === icon);\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${window.location.origin}/wp-content/themes/chilterns/dist/img/map/plain/${hasIcon ? +hasIcon : 0}.svg`,\n      alt: \"Marker icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      classes: `category-label ${open && 'active'} ${isSelected && 'selected'}`,\n      clicked: handleToggleCategory,\n      ariaLabel: `Click to toggle ${htmlDecode(category.name)} category filters`,\n      \"data-tid\": category.tid,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"Category arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), htmlDecode(category.name)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: open && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"filters-dropdown\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        transition: {\n          ease: 'easeInOut'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          clicked: () => handleParentCategoryFilter(category.tid, category.children),\n          classes: `category ${activeMarkerFilters.includes(category.tid) && 'active'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"check\",\n            role: \"checkbox\",\n            \"aria-label\": \"Visual check for category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), \"See all \", htmlDecode(category.name), checkHasIcon(category)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), category.children.map(childCategory => /*#__PURE__*/_jsxDEV(Button, {\n          clicked: () => handleChildCategoryFilter(childCategory.tid, category.tid),\n          classes: `category ${activeMarkerFilters.includes(childCategory.tid) && 'active'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"check\",\n            role: \"checkbox\",\n            \"aria-label\": \"Visual check for category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), htmlDecode(childCategory.name), checkHasIcon(childCategory)]\n        }, childCategory.tid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MarkerCategory, \"VuijRMkK+4gM22UKSHn+gjC+zm4=\");\n\n_c = MarkerCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarkerCategory\");","map":{"version":3,"names":["useContext","useEffect","useState","htmlDecode","DispatchContext","StateContext","Button","AppState","AnimatePresence","motion","markerIcons","updateActiveCategories","MarkerCategory","category","open","setOpen","currentTids","setCurrentTids","isSelected","setIsSelected","dispatch","state","activeMarkerFilters","mapRef","isCategorySelected","filter","tid","tidsMatch","length","term","includes","undefined","handleToggleCategory","handleParentCategoryFilter","children","childTids","map","childrenToRemove","el","forEach","type","ACTIVE_MARKER_CATEGORIES","mode","updatedTids","handleChildCategoryFilter","childTid","parentTid","checkHasIcon","hasIcon","icon","window","location","origin","name","opacity","ease","childCategory"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/components/filters/MarkerCategory.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport { htmlDecode } from '../../helpers'\nimport { DispatchContext, StateContext } from '../../MapApp'\nimport Button from '../../ui/Button'\nimport {\n  AppState,\n  DispatchContextT,\n  StateContextT,\n  TaxonomyEntity,\n} from '../../utils/types'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { markerIcons } from '../../data/markerIcons'\nimport updateActiveCategories from '../../hooks/updateActiveCategories'\n\ntype Props = {\n  category: TaxonomyEntity\n}\n\n/**\n * Top level marker categories, rendering out the parent & child categories\n */\nexport default function MarkerCategory({ category }: Props) {\n  const [open, setOpen] = useState<boolean>(false)\n  const [currentTids, setCurrentTids] = useState<any[]>([])\n  const [isSelected, setIsSelected] = useState<boolean>(false)\n  const { dispatch } = useContext(DispatchContext) as DispatchContextT\n  const { state } = useContext(StateContext) as StateContextT\n  const { activeMarkerFilters, mapRef } = state\n\n  useEffect(() => {\n    // If a tid from this cateogry is in state, set selected class to category toggle\n    const isCategorySelected = currentTids.filter(tid => {\n      const tidsMatch =\n        currentTids.length > 0 ||\n        tid.filter((term: number) => {\n          return activeMarkerFilters.includes(term)\n        }).length\n\n      return tidsMatch !== undefined\n    })\n\n    setIsSelected(isCategorySelected.length > 0 ? true : false)\n\n    // If no filters are selected, reset state to intital\n    if (activeMarkerFilters.length === 0) {\n      setIsSelected(false)\n      setCurrentTids([])\n    }\n  }, [activeMarkerFilters, currentTids])\n\n  // Hide/show category buttons\n  function handleToggleCategory() {\n    setOpen(!open)\n  }\n\n  function handleParentCategoryFilter(tid: number, children: TaxonomyEntity[]) {\n    // Get child term IDs as array to cross reference against state\n    const childTids = children.map(term => term.tid)\n\n    // If child terms are present, remove them\n    const childrenToRemove = activeMarkerFilters.filter(function (el) {\n      return childTids.includes(el)\n    })\n\n    // Remove child TIDs from state - look in to more performant way to achieve this\n    if (childrenToRemove.length > 0)\n      childrenToRemove.forEach(tid => {\n        dispatch({\n          type: AppState.ACTIVE_MARKER_CATEGORIES,\n          mode: tid,\n        })\n      })\n\n    // Add parent TID to state\n    dispatch({\n      type: AppState.ACTIVE_MARKER_CATEGORIES,\n      mode: tid,\n    })\n\n    // Toggle category in/out of state to manage parent button selected state\n    const updatedTids = updateActiveCategories(tid, currentTids, mapRef)\n    setCurrentTids(updatedTids)\n  }\n\n  function handleChildCategoryFilter(childTid: number, parentTid: number) {\n    // Check if parent TID is in state, if so, remove it\n    if (activeMarkerFilters.includes(parentTid)) {\n      dispatch({\n        type: AppState.ACTIVE_MARKER_CATEGORIES,\n        mode: parentTid,\n      })\n    }\n\n    // Add child TID to state\n    dispatch({\n      type: AppState.ACTIVE_MARKER_CATEGORIES,\n      mode: childTid,\n    })\n\n    // Toggle category in/out of state to manage parent button selected state\n    const updatedTids = updateActiveCategories(childTid, currentTids, mapRef)\n    setCurrentTids(updatedTids)\n  }\n\n  function checkHasIcon(term: TaxonomyEntity) {\n    const hasIcon = markerIcons.filter((icon: number) => term.tid === icon)\n\n    return (\n      <img\n        src={`${\n          window.location.origin\n        }/wp-content/themes/chilterns/dist/img/map/plain/${\n          hasIcon ? +hasIcon : 0\n        }.svg`}\n        alt=\"Marker icon\"\n      />\n    )\n  }\n\n  return (\n    <>\n      <Button\n        classes={`category-label ${open && 'active'} ${\n          isSelected && 'selected'\n        }`}\n        clicked={handleToggleCategory}\n        ariaLabel={`Click to toggle ${htmlDecode(\n          category.name\n        )} category filters`}\n        data-tid={category.tid}\n      >\n        <span role=\"img\" aria-label=\"Category arrow\"></span>\n        {htmlDecode(category.name)}\n      </Button>\n\n      <AnimatePresence>\n        {open && (\n          <motion.div\n            className=\"filters-dropdown\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ ease: 'easeInOut' }}\n          >\n            <Button\n              clicked={() =>\n                handleParentCategoryFilter(category.tid, category.children)\n              }\n              classes={`category ${\n                activeMarkerFilters.includes(category.tid) && 'active'\n              }`}\n            >\n              <span\n                className=\"check\"\n                role=\"checkbox\"\n                aria-label=\"Visual check for category\"\n              ></span>\n              See all {htmlDecode(category.name)}\n              {checkHasIcon(category)}\n            </Button>\n\n            {category.children.map((childCategory: TaxonomyEntity) => (\n              <Button\n                key={childCategory.tid}\n                clicked={() =>\n                  handleChildCategoryFilter(childCategory.tid, category.tid)\n                }\n                classes={`category ${\n                  activeMarkerFilters.includes(childCategory.tid) && 'active'\n                }`}\n              >\n                <span\n                  className=\"check\"\n                  role=\"checkbox\"\n                  aria-label=\"Visual check for category\"\n                ></span>\n                {htmlDecode(childCategory.name)}\n                {checkHasIcon(childCategory)}\n              </Button>\n            ))}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}