{"ast":null,"code":"/**\n * REST API url\n */\n// export const baseUrl = `${window.location.origin}/wp-json/bloo/v1`\nexport const baseUrl = `https://chilterns.hapticserver.com//wp-json/bloo/v1`;\n/**\n * OS Maps API key\n */\n\nexport const apiKey = 'YP2NQmvLpXZWIwiaOQofh1AAC8cBfqoE';\n/**\n * OS Maps servive url\n */\n\nexport const serviceUrl = 'https://api.os.uk/maps/raster/v1/zxy';\n/**\n * Render HTML from string\n */\n\nexport function htmlDecode(input) {\n  var doc = new DOMParser().parseFromString(input, 'text/html');\n  return doc.documentElement.textContent;\n}\n/**\n * Check if 2 arrays share a common element\n */\n\nexport function findCommonElements(arr1, arr2) {\n  return arr1.some(item => arr2.includes(item));\n}\n/**\n * Styled components breakpoints\n */\n\nexport const sizes = {\n  xs: '(max-width:500px)',\n  sm: '(max-width:768px)',\n  md: '(max-width:1024px)',\n  lg: '(max-width:1300px)',\n  xl: '(max-width:1500px)'\n};","map":{"version":3,"names":["baseUrl","apiKey","serviceUrl","htmlDecode","input","doc","DOMParser","parseFromString","documentElement","textContent","findCommonElements","arr1","arr2","some","item","includes","sizes","xs","sm","md","lg","xl"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/helpers/index.ts"],"sourcesContent":["/**\n * REST API url\n */\n// export const baseUrl = `${window.location.origin}/wp-json/bloo/v1`\nexport const baseUrl = `https://chilterns.hapticserver.com//wp-json/bloo/v1`\n\n/**\n * OS Maps API key\n */\nexport const apiKey = 'YP2NQmvLpXZWIwiaOQofh1AAC8cBfqoE'\n\n/**\n * OS Maps servive url\n */\nexport const serviceUrl = 'https://api.os.uk/maps/raster/v1/zxy'\n\n/**\n * Render HTML from string\n */\nexport function htmlDecode(input: string) {\n  var doc = new DOMParser().parseFromString(input, 'text/html')\n  return doc.documentElement.textContent\n}\n\n/**\n * Check if 2 arrays share a common element\n */\nexport function findCommonElements(\n  arr1: [string | number],\n  arr2: [string | number]\n) {\n  return arr1.some((item: string | number) => arr2.includes(item))\n}\n\n/**\n * Styled components breakpoints\n */\nexport const sizes = {\n  xs: '(max-width:500px)',\n  sm: '(max-width:768px)',\n  md: '(max-width:1024px)',\n  lg: '(max-width:1300px)',\n  xl: '(max-width:1500px)',\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,OAAO,GAAI,qDAAjB;AAEP;AACA;AACA;;AACA,OAAO,MAAMC,MAAM,GAAG,kCAAf;AAEP;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG,sCAAnB;AAEP;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAAmC;EACxC,IAAIC,GAAG,GAAG,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCH,KAAhC,EAAuC,WAAvC,CAAV;EACA,OAAOC,GAAG,CAACG,eAAJ,CAAoBC,WAA3B;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CACLC,IADK,EAELC,IAFK,EAGL;EACA,OAAOD,IAAI,CAACE,IAAL,CAAWC,IAAD,IAA2BF,IAAI,CAACG,QAAL,CAAcD,IAAd,CAArC,CAAP;AACD;AAED;AACA;AACA;;AACA,OAAO,MAAME,KAAK,GAAG;EACnBC,EAAE,EAAE,mBADe;EAEnBC,EAAE,EAAE,mBAFe;EAGnBC,EAAE,EAAE,oBAHe;EAInBC,EAAE,EAAE,oBAJe;EAKnBC,EAAE,EAAE;AALe,CAAd"},"metadata":{},"sourceType":"module"}