{"ast":null,"code":"import{useContext}from'react';import{StateContext}from'../../MapApp';import Route from'./Route';import useFilters from'../../hooks/useFilters';/**\n * Map routes\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Routes(){var _ref=useContext(StateContext),state=_ref.state;var routeData=state.routeData,activeRouteFilters=state.activeRouteFilters;// Get filtered results based on state\nvar results=useFilters(routeData,activeRouteFilters);return/*#__PURE__*/_jsx(_Fragment,{children:results.map(function(route){return/*#__PURE__*/_jsx(Route,{route:route},route.id);})});}","map":{"version":3,"names":["useContext","StateContext","Route","useFilters","Routes","state","routeData","activeRouteFilters","results","map","route","id"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/components/routes/Routes.tsx"],"sourcesContent":["import { useContext } from 'react'\nimport { StateContext } from '../../MapApp'\nimport { StateContextT } from '../../utils/types'\nimport Route from './Route'\nimport useFilters from '../../hooks/useFilters'\n\n/**\n * Map routes\n */\nexport default function Routes() {\n  const { state } = useContext(StateContext) as StateContextT\n  const { routeData, activeRouteFilters } = state\n\n  // Get filtered results based on state\n  const results = useFilters(routeData, activeRouteFilters)\n\n  return (\n    <>\n      {results.map(route => {\n        return <Route key={route.id} route={route} />\n      })}\n    </>\n  )\n}\n"],"mappings":"AAAA,OAASA,UAAT,KAA2B,OAA3B,CACA,OAASC,YAAT,KAA6B,cAA7B,CAEA,MAAOC,MAAP,KAAkB,SAAlB,CACA,MAAOC,WAAP,KAAuB,wBAAvB,CAEA;AACA;AACA,G,gGACA,cAAe,SAASC,OAAT,EAAkB,CAC/B,SAAkBJ,UAAU,CAACC,YAAD,CAA5B,CAAQI,KAAR,MAAQA,KAAR,CACA,GAAQC,UAAR,CAA0CD,KAA1C,CAAQC,SAAR,CAAmBC,kBAAnB,CAA0CF,KAA1C,CAAmBE,kBAAnB,CAEA;AACA,GAAMC,QAAO,CAAGL,UAAU,CAACG,SAAD,CAAYC,kBAAZ,CAA1B,CAEA,mBACE,yBACGC,OAAO,CAACC,GAAR,CAAY,SAAAC,KAAK,CAAI,CACpB,mBAAO,KAAC,KAAD,EAAsB,KAAK,CAAEA,KAA7B,EAAYA,KAAK,CAACC,EAAlB,CAAP,CACD,CAFA,CADH,EADF,CAOD"},"metadata":{},"sourceType":"module"}