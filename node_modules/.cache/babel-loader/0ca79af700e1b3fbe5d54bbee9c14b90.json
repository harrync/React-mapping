{"ast":null,"code":"/**\n * Filter map based on user selections\n */export default function useFilters(mapElements,activeFilters){return mapElements.filter(function(mapElement){var _mapElement$categorie;// Filter by Term IDs\nvar categoriesMatch=(_mapElement$categorie=mapElement.categories)===null||_mapElement$categorie===void 0?void 0:_mapElement$categorie.filter(function(term){return activeFilters.includes(term);}).length;if(!categoriesMatch)return null;return categoriesMatch>0;});}","map":{"version":3,"names":["useFilters","mapElements","activeFilters","filter","mapElement","categoriesMatch","categories","term","includes","length"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/hooks/useFilters.ts"],"sourcesContent":["import { MapEntity } from '../utils/types'\n\n/**\n * Filter map based on user selections\n */\nexport default function useFilters(\n  mapElements: MapEntity[],\n  activeFilters: number[]\n) {\n  return mapElements.filter(mapElement => {\n    // Filter by Term IDs\n    const categoriesMatch = mapElement.categories?.filter((term: number) => {\n      return activeFilters.includes(term)\n    }).length\n\n    if (!categoriesMatch) return null\n\n    return categoriesMatch > 0\n  })\n}\n"],"mappings":"AAEA;AACA;AACA,GACA,cAAe,SAASA,WAAT,CACbC,WADa,CAEbC,aAFa,CAGb,CACA,MAAOD,YAAW,CAACE,MAAZ,CAAmB,SAAAC,UAAU,CAAI,2BACtC;AACA,GAAMC,gBAAe,wBAAGD,UAAU,CAACE,UAAd,gDAAG,sBAAuBH,MAAvB,CAA8B,SAACI,IAAD,CAAkB,CACtE,MAAOL,cAAa,CAACM,QAAd,CAAuBD,IAAvB,CAAP,CACD,CAFuB,EAErBE,MAFH,CAIA,GAAI,CAACJ,eAAL,CAAsB,MAAO,KAAP,CAEtB,MAAOA,gBAAe,CAAG,CAAzB,CACD,CATM,CAAP,CAUD"},"metadata":{},"sourceType":"module"}