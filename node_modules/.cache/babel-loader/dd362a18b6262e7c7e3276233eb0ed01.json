{"ast":null,"code":"var _jsxFileName = \"/Users/harryedwards/Work/FL/_examples/mapping/src/components/Map.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { useContext, useMemo } from 'react';\nimport { MapContainer, TileLayer, Polygon, useMap, Tooltip } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L, { latLngBounds } from 'leaflet';\nimport { apiKey, serviceUrl } from '../helpers';\nimport { aonbArea, aonbOptions } from '../data/chilternsAonbArea';\nimport { StateContext } from '../MapApp';\nimport Markers from './markers/Markers';\nimport Routes from './routes/Routes';\nimport MapStyles from './Map.styles';\n/**\n * Render map\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function map() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // const [mapZoom, setMapZoom] = useState(10)\n  const {\n    state\n  } = useContext(StateContext);\n  const {\n    showAonbArea,\n    markerData,\n    routeData,\n    infoBarContent,\n    activeMarkerFilters,\n    activeRouteFilters\n  } = state; // function windowSize() {\n  //   window.innerWidth < 1024 ? setMapZoom(8) : setMapZoom(12)\n  //   console.log(window.innerWidth < 1024)\n  //   if (window.innerWidth < 1024) {\n  //     setMapZoom(8)\n  //   }\n  //   console.log(mapZoom)\n  // }\n  // Set map default zoom based on screen size\n  // useEffect(() => {\n  //   windowSize()\n  //   window.addEventListener('resize', () => {\n  //     setTimeout(windowSize, 200)\n  //   })\n  // }, [])\n  // Set bounds of map based on available markers\n\n  function SetBounds() {\n    _s();\n\n    // When filters are empty, don't relocate map focus\n    if (activeMarkerFilters.length === 0 && activeRouteFilters.length === 0) {\n      return null;\n    }\n\n    const map = useMap(); // Get active markers\n\n    const currentMarkers = markerData.filter(marker => {\n      var _marker$categories;\n\n      const matchedCategory = (_marker$categories = marker.categories) === null || _marker$categories === void 0 ? void 0 : _marker$categories.filter(function (id) {\n        return activeMarkerFilters.indexOf(id) !== -1;\n      });\n      if (!matchedCategory) return null;\n      return matchedCategory.length > 0;\n    }); // Get lat/lng for each active marker\n\n    const markerPositions = currentMarkers.map(marker => {\n      return marker.position;\n    });\n\n    if (markerPositions.length) {\n      const mapBounds = useMemo(() => {\n        // Generate bounds based on current marker data\n        const bounds = latLngBounds(null);\n        markerPositions.forEach(coords => {\n          bounds.extend(coords);\n        }); // Update bounds of map\n\n        map.flyToBounds(bounds, {\n          padding: [0, 0],\n          maxZoom: 13\n        });\n        return bounds;\n      }, [markerPositions]);\n    }\n\n    return null;\n  }\n\n  _s(SetBounds, \"XxrQXXZAglCsDRESB2+oYiTsQMw=\", false, function () {\n    return [useMap];\n  });\n\n  return /*#__PURE__*/_jsxDEV(MapStyles, {\n    className: `${infoBarContent && 'disabled'}`,\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      zoom: 10,\n      maxZoom: 18,\n      minZoom: 8,\n      scrollWheelZoom: false,\n      center: [51.6858401, -0.79],\n      dragging: !L.Browser.mobile,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: `Contains OS data &copy; Crown copyright and database rights ${new Date().getFullYear()}`,\n        url: `${serviceUrl}/Outdoor_3857/{z}/{x}/{y}.png?key=${apiKey}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), markerData && /*#__PURE__*/_jsxDEV(Markers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 24\n      }, this), routeData && /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }, this), showAonbArea && /*#__PURE__*/_jsxDEV(Polygon, {\n        pathOptions: aonbOptions,\n        positions: aonbArea,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          sticky: true,\n          children: \"Chilterns AONB area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SetBounds, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"os-api-branding logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(map, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"names":["useContext","useMemo","MapContainer","TileLayer","Polygon","useMap","Tooltip","L","latLngBounds","apiKey","serviceUrl","aonbArea","aonbOptions","StateContext","Markers","Routes","MapStyles","map","state","showAonbArea","markerData","routeData","infoBarContent","activeMarkerFilters","activeRouteFilters","SetBounds","length","currentMarkers","filter","marker","matchedCategory","categories","id","indexOf","markerPositions","position","mapBounds","bounds","forEach","coords","extend","flyToBounds","padding","maxZoom","width","height","Browser","mobile","Date","getFullYear"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/components/Map.tsx"],"sourcesContent":["import { useContext, useMemo } from 'react'\nimport {\n  MapContainer,\n  TileLayer,\n  Polygon,\n  useMap,\n  Tooltip,\n} from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L, { latLngBounds, LatLngExpression } from 'leaflet'\nimport { apiKey, serviceUrl } from '../helpers'\nimport { aonbArea, aonbOptions } from '../data/chilternsAonbArea'\nimport { StateContext } from '../MapApp'\nimport { MarkerEntity, StateContextT } from '../utils/types'\nimport Markers from './markers/Markers'\nimport Routes from './routes/Routes'\nimport MapStyles from './Map.styles'\n\n/**\n * Render map\n */\nexport default function map() {\n  // const [mapZoom, setMapZoom] = useState(10)\n  const { state } = useContext(StateContext) as StateContextT\n  const {\n    showAonbArea,\n    markerData,\n    routeData,\n    infoBarContent,\n    activeMarkerFilters,\n    activeRouteFilters,\n  } = state\n\n  // function windowSize() {\n  //   window.innerWidth < 1024 ? setMapZoom(8) : setMapZoom(12)\n  //   console.log(window.innerWidth < 1024)\n\n  //   if (window.innerWidth < 1024) {\n  //     setMapZoom(8)\n  //   }\n\n  //   console.log(mapZoom)\n  // }\n\n  // Set map default zoom based on screen size\n  // useEffect(() => {\n  //   windowSize()\n\n  //   window.addEventListener('resize', () => {\n  //     setTimeout(windowSize, 200)\n  //   })\n  // }, [])\n\n  // Set bounds of map based on available markers\n  function SetBounds(): any {\n    // When filters are empty, don't relocate map focus\n    if (activeMarkerFilters.length === 0 && activeRouteFilters.length === 0) {\n      return null\n    }\n\n    const map = useMap()\n\n    // Get active markers\n    const currentMarkers = markerData.filter(marker => {\n      const matchedCategory = marker.categories?.filter(function (id) {\n        return activeMarkerFilters.indexOf(id) !== -1\n      })\n      if (!matchedCategory) return null\n      return matchedCategory.length > 0\n    })\n\n    // Get lat/lng for each active marker\n    const markerPositions = currentMarkers.map((marker: MarkerEntity) => {\n      return marker.position\n    })\n\n    if (markerPositions.length) {\n      const mapBounds = useMemo(() => {\n        // Generate bounds based on current marker data\n        const bounds = latLngBounds(null)\n        markerPositions.forEach((coords: LatLngExpression) => {\n          bounds.extend(coords)\n        })\n\n        // Update bounds of map\n        map.flyToBounds(bounds, { padding: [0, 0], maxZoom: 13 })\n        return bounds\n      }, [markerPositions])\n    }\n\n    return null\n  }\n\n  return (\n    <MapStyles className={`${infoBarContent && 'disabled'}`}>\n      <MapContainer\n        style={{ width: '100%', height: '100%' }}\n        zoom={10}\n        maxZoom={18}\n        minZoom={8}\n        scrollWheelZoom={false}\n        center={[51.6858401, -0.79]}\n        dragging={!L.Browser.mobile}\n      >\n        <TileLayer\n          attribution={`Contains OS data &copy; Crown copyright and database rights ${new Date().getFullYear()}`}\n          url={`${serviceUrl}/Outdoor_3857/{z}/{x}/{y}.png?key=${apiKey}`}\n        />\n\n        {markerData && <Markers />}\n\n        {routeData && <Routes />}\n\n        {showAonbArea && (\n          <Polygon pathOptions={aonbOptions} positions={aonbArea}>\n            <Tooltip sticky={true}>Chilterns AONB area</Tooltip>\n          </Polygon>\n        )}\n\n        <SetBounds />\n      </MapContainer>\n      <span className=\"os-api-branding logo\"></span>\n    </MapStyles>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}