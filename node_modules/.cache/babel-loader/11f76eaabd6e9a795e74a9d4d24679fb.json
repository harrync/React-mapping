{"ast":null,"code":"import _slicedToArray from\"/Users/harryedwards/Work/FL/_examples/mapping/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useEffect,useState}from'react';import{GeoJSON,Tooltip}from'react-leaflet';import PopupWrapper from'../PopupWrapper';import{htmlDecode}from'../../helpers';import{StateContext}from'../../MapApp';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";/**\n * Route map element\n */export default function Route(_ref){var route=_ref.route;var _ref2=useContext(StateContext),state=_ref2.state;var routeCategoryData=state.routeCategoryData;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),routeData=_useState2[0],setRouteData=_useState2[1];// Get data from shape file, convert to geoJSON object\nuseEffect(function(){fetch(route.shape_file).then(function(blob){return blob.json();}).then(function(data){setRouteData(data);}).catch(function(err){throw Error(err);});},[route.shape_file]);if(routeData){var routeColour=routeCategoryData.filter(function(category){return category.tid===route.categories[0];});return/*#__PURE__*/_jsxs(GeoJSON,{data:routeData,pathOptions:{color:routeColour[0].route_colour,weight:5,stroke:true},children:[/*#__PURE__*/_jsx(PopupWrapper,{infoContent:route}),/*#__PURE__*/_jsx(Tooltip,{sticky:true,children:htmlDecode(route.title)})]},route.id);}return/*#__PURE__*/_jsx(_Fragment,{});}","map":{"version":3,"names":["useContext","useEffect","useState","GeoJSON","Tooltip","PopupWrapper","htmlDecode","StateContext","Route","route","state","routeCategoryData","routeData","setRouteData","fetch","shape_file","then","blob","json","data","catch","err","Error","routeColour","filter","category","tid","categories","color","route_colour","weight","stroke","title","id"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/components/routes/Route.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport { GeoJsonObject } from 'geojson'\nimport { GeoJSON, Tooltip } from 'react-leaflet'\nimport { RouteEntity, StateContextT } from '../../utils/types'\nimport PopupWrapper from '../PopupWrapper'\nimport { htmlDecode } from '../../helpers'\nimport { StateContext } from '../../MapApp'\n\ntype Props = {\n  route: RouteEntity\n}\n\n/**\n * Route map element\n */\nexport default function Route({ route }: Props) {\n  const { state } = useContext(StateContext) as StateContextT\n  const { routeCategoryData } = state\n  const [routeData, setRouteData] = useState(null)\n\n  // Get data from shape file, convert to geoJSON object\n  useEffect(() => {\n    fetch(route.shape_file!)\n      .then(blob => blob.json())\n      .then(data => {\n        setRouteData(data)\n      })\n      .catch(err => {\n        throw Error(err)\n      })\n  }, [route.shape_file])\n\n  if (routeData) {\n    const routeColour = routeCategoryData.filter(\n      category => category.tid === route.categories![0]\n    )\n\n    return (\n      <GeoJSON\n        key={route.id}\n        data={routeData as GeoJsonObject}\n        pathOptions={{\n          color: routeColour[0].route_colour,\n          weight: 5,\n          stroke: true,\n        }}\n      >\n        <PopupWrapper infoContent={route} />\n        <Tooltip sticky={true}>{htmlDecode(route.title)}</Tooltip>\n      </GeoJSON>\n    )\n  }\n\n  return <></>\n}\n"],"mappings":"mIAAA,OAASA,UAAT,CAAqBC,SAArB,CAAgCC,QAAhC,KAAgD,OAAhD,CAEA,OAASC,OAAT,CAAkBC,OAAlB,KAAiC,eAAjC,CAEA,MAAOC,aAAP,KAAyB,iBAAzB,CACA,OAASC,UAAT,KAA2B,eAA3B,CACA,OAASC,YAAT,KAA6B,cAA7B,C,6IAMA;AACA;AACA,GACA,cAAe,SAASC,MAAT,MAAiC,IAAhBC,MAAgB,MAAhBA,KAAgB,CAC9C,UAAkBT,UAAU,CAACO,YAAD,CAA5B,CAAQG,KAAR,OAAQA,KAAR,CACA,GAAQC,kBAAR,CAA8BD,KAA9B,CAAQC,iBAAR,CACA,cAAkCT,QAAQ,CAAC,IAAD,CAA1C,wCAAOU,SAAP,eAAkBC,YAAlB,eAEA;AACAZ,SAAS,CAAC,UAAM,CACda,KAAK,CAACL,KAAK,CAACM,UAAP,CAAL,CACGC,IADH,CACQ,SAAAC,IAAI,QAAIA,KAAI,CAACC,IAAL,EAAJ,EADZ,EAEGF,IAFH,CAEQ,SAAAG,IAAI,CAAI,CACZN,YAAY,CAACM,IAAD,CAAZ,CACD,CAJH,EAKGC,KALH,CAKS,SAAAC,GAAG,CAAI,CACZ,KAAMC,MAAK,CAACD,GAAD,CAAX,CACD,CAPH,EAQD,CATQ,CASN,CAACZ,KAAK,CAACM,UAAP,CATM,CAAT,CAWA,GAAIH,SAAJ,CAAe,CACb,GAAMW,YAAW,CAAGZ,iBAAiB,CAACa,MAAlB,CAClB,SAAAC,QAAQ,QAAIA,SAAQ,CAACC,GAAT,GAAiBjB,KAAK,CAACkB,UAAN,CAAkB,CAAlB,CAArB,EADU,CAApB,CAIA,mBACE,MAAC,OAAD,EAEE,IAAI,CAAEf,SAFR,CAGE,WAAW,CAAE,CACXgB,KAAK,CAAEL,WAAW,CAAC,CAAD,CAAX,CAAeM,YADX,CAEXC,MAAM,CAAE,CAFG,CAGXC,MAAM,CAAE,IAHG,CAHf,wBASE,KAAC,YAAD,EAAc,WAAW,CAAEtB,KAA3B,EATF,cAUE,KAAC,OAAD,EAAS,MAAM,CAAE,IAAjB,UAAwBH,UAAU,CAACG,KAAK,CAACuB,KAAP,CAAlC,EAVF,GACOvB,KAAK,CAACwB,EADb,CADF,CAcD,CAED,mBAAO,kBAAP,CACD"},"metadata":{},"sourceType":"module"}