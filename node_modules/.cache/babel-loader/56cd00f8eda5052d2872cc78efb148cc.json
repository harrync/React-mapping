{"ast":null,"code":"export default function updateActiveCategories(tid, toUpdate, mapRef) {\n  const activeFilters = [...toUpdate];\n  const matchingTerm = activeFilters.indexOf(tid); // If tid is present remove it, else add it to array\n\n  if (matchingTerm > -1) {\n    activeFilters.splice(matchingTerm, 1);\n  } else {\n    var _mapRef$current;\n\n    activeFilters.push(tid); // Scroll to map\n\n    mapRef && ((_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.scrollIntoView({\n      behavior: 'smooth'\n    }));\n  }\n\n  return activeFilters;\n}","map":{"version":3,"names":["updateActiveCategories","tid","toUpdate","mapRef","activeFilters","matchingTerm","indexOf","splice","push","current","scrollIntoView","behavior"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/hooks/updateActiveCategories.ts"],"sourcesContent":["export default function updateActiveCategories(\n  tid: number,\n  toUpdate: number[],\n  mapRef: React.RefObject<HTMLElement> | null\n) {\n  const activeFilters = [...toUpdate]\n  const matchingTerm = activeFilters.indexOf(tid)\n\n  // If tid is present remove it, else add it to array\n  if (matchingTerm > -1) {\n    activeFilters.splice(matchingTerm, 1)\n  } else {\n    activeFilters.push(tid)\n\n    // Scroll to map\n    mapRef && mapRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n  return activeFilters\n}\n"],"mappings":"AAAA,eAAe,SAASA,sBAAT,CACbC,GADa,EAEbC,QAFa,EAGbC,MAHa,EAIb;EACA,MAAMC,aAAa,GAAG,CAAC,GAAGF,QAAJ,CAAtB;EACA,MAAMG,YAAY,GAAGD,aAAa,CAACE,OAAd,CAAsBL,GAAtB,CAArB,CAFA,CAIA;;EACA,IAAII,YAAY,GAAG,CAAC,CAApB,EAAuB;IACrBD,aAAa,CAACG,MAAd,CAAqBF,YAArB,EAAmC,CAAnC;EACD,CAFD,MAEO;IAAA;;IACLD,aAAa,CAACI,IAAd,CAAmBP,GAAnB,EADK,CAGL;;IACAE,MAAM,wBAAIA,MAAM,CAACM,OAAX,oDAAI,gBAAgBC,cAAhB,CAA+B;MAAEC,QAAQ,EAAE;IAAZ,CAA/B,CAAJ,CAAN;EACD;;EACD,OAAOP,aAAP;AACD"},"metadata":{},"sourceType":"module"}