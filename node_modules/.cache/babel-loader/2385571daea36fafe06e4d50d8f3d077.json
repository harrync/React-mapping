{"ast":null,"code":"/**\n * Filter map based on user selections\n */\nexport default function useFilters(mapElements, activeFilters) {\n  return mapElements.filter(mapElement => {\n    var _mapElement$categorie;\n\n    // Filter by Term IDs\n    const categoriesMatch = (_mapElement$categorie = mapElement.categories) === null || _mapElement$categorie === void 0 ? void 0 : _mapElement$categorie.filter(term => {\n      return activeFilters.includes(term);\n    }).length;\n    if (!categoriesMatch) return null;\n    return categoriesMatch > 0;\n  });\n}","map":{"version":3,"names":["useFilters","mapElements","activeFilters","filter","mapElement","categoriesMatch","categories","term","includes","length"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/hooks/useFilters.ts"],"sourcesContent":["import { MapEntity } from '../utils/types'\n\n/**\n * Filter map based on user selections\n */\nexport default function useFilters(\n  mapElements: MapEntity[],\n  activeFilters: number[]\n) {\n  return mapElements.filter(mapElement => {\n    // Filter by Term IDs\n    const categoriesMatch = mapElement.categories?.filter((term: number) => {\n      return activeFilters.includes(term)\n    }).length\n\n    if (!categoriesMatch) return null\n\n    return categoriesMatch > 0\n  })\n}\n"],"mappings":"AAEA;AACA;AACA;AACA,eAAe,SAASA,UAAT,CACbC,WADa,EAEbC,aAFa,EAGb;EACA,OAAOD,WAAW,CAACE,MAAZ,CAAmBC,UAAU,IAAI;IAAA;;IACtC;IACA,MAAMC,eAAe,4BAAGD,UAAU,CAACE,UAAd,0DAAG,sBAAuBH,MAAvB,CAA+BI,IAAD,IAAkB;MACtE,OAAOL,aAAa,CAACM,QAAd,CAAuBD,IAAvB,CAAP;IACD,CAFuB,EAErBE,MAFH;IAIA,IAAI,CAACJ,eAAL,EAAsB,OAAO,IAAP;IAEtB,OAAOA,eAAe,GAAG,CAAzB;EACD,CATM,CAAP;AAUD"},"metadata":{},"sourceType":"module"}