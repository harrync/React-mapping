{"ast":null,"code":"var _jsxFileName = \"/Users/harryedwards/Work/FL/_examples/mapping/src/components/filters/RouteCategoryFilters.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useContext, useState } from 'react';\nimport { htmlDecode } from '../../helpers';\nimport { DispatchContext, StateContext } from '../../MapApp';\nimport Button from '../../ui/Button';\nimport { AppState } from '../../utils/types';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RouteCategoryFilters() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const {\n    state\n  } = useContext(StateContext);\n  const {\n    dispatch\n  } = useContext(DispatchContext);\n  const {\n    routeCategoryData,\n    activeRouteFilters\n  } = state; // Hide/show category buttons\n\n  function handleToggleCategory() {\n    setOpen(!open);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      classes: `category-label ${open && 'active'} ${activeRouteFilters.length > 0 && 'selected'}`,\n      clicked: handleToggleCategory,\n      ariaLabel: `Click to toggle routes`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"Category arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \"Routes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"filters-dropdown\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      exit: {\n        opacity: 0\n      },\n      transition: {\n        ease: 'easeInOut'\n      },\n      children: routeCategoryData.map(category => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          clicked: () => dispatch({\n            type: AppState.ACTIVE_ROUTE_CATEGORIES,\n            mode: category.tid\n          }),\n          classes: `category ${activeRouteFilters.includes(category.tid) && 'active'}`,\n          \"data-tid\": category.tid,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"check\",\n            role: \"checkbox\",\n            \"aria-label\": \"Visual checkbox for category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), htmlDecode(category.name), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            style: {\n              backgroundColor: category.route_colour\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, category.tid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RouteCategoryFilters, \"bdErVPuaS7ChvQCjozCfjPqYeyI=\");\n\n_c = RouteCategoryFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteCategoryFilters\");","map":{"version":3,"names":["Fragment","useContext","useState","htmlDecode","DispatchContext","StateContext","Button","AppState","motion","RouteCategoryFilters","open","setOpen","state","dispatch","routeCategoryData","activeRouteFilters","handleToggleCategory","length","opacity","ease","map","category","type","ACTIVE_ROUTE_CATEGORIES","mode","tid","includes","name","backgroundColor","route_colour"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/components/filters/RouteCategoryFilters.tsx"],"sourcesContent":["import { Fragment, useContext, useState } from 'react'\nimport { htmlDecode } from '../../helpers'\nimport { DispatchContext, StateContext } from '../../MapApp'\nimport Button from '../../ui/Button'\nimport {\n  AppState,\n  DispatchContextT,\n  StateContextT,\n  TaxonomyEntity,\n} from '../../utils/types'\nimport { motion } from 'framer-motion'\n\nexport default function RouteCategoryFilters() {\n  const [open, setOpen] = useState(false)\n\n  const { state } = useContext(StateContext) as StateContextT\n  const { dispatch } = useContext(DispatchContext) as DispatchContextT\n  const { routeCategoryData, activeRouteFilters } = state\n\n  // Hide/show category buttons\n  function handleToggleCategory() {\n    setOpen(!open)\n  }\n\n  return (\n    <>\n      <Button\n        classes={`category-label ${open && 'active'} ${\n          activeRouteFilters.length > 0 && 'selected'\n        }`}\n        clicked={handleToggleCategory}\n        ariaLabel={`Click to toggle routes`}\n      >\n        <span role=\"img\" aria-label=\"Category arrow\"></span>\n        Routes\n      </Button>\n\n      {open && (\n        <motion.div\n          className=\"filters-dropdown\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ ease: 'easeInOut' }}\n        >\n          {routeCategoryData.map((category: TaxonomyEntity) => (\n            <Fragment key={category.tid}>\n              <Button\n                clicked={() =>\n                  dispatch({\n                    type: AppState.ACTIVE_ROUTE_CATEGORIES,\n                    mode: category.tid,\n                  })\n                }\n                classes={`category ${\n                  activeRouteFilters.includes(category.tid) && 'active'\n                }`}\n                data-tid={category.tid}\n              >\n                <span\n                  className=\"check\"\n                  role=\"checkbox\"\n                  aria-label=\"Visual checkbox for category\"\n                ></span>\n                {htmlDecode(category.name)}\n                <span\n                  className=\"icon\"\n                  style={{ backgroundColor: category.route_colour }}\n                ></span>\n              </Button>\n            </Fragment>\n          ))}\n        </motion.div>\n      )}\n    </>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,cAA9C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SACEC,QADF,QAKO,mBALP;AAMA,SAASC,MAAT,QAAuB,eAAvB;;;AAEA,eAAe,SAASC,oBAAT,GAAgC;EAAA;;EAC7C,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;EAEA,MAAM;IAAEU;EAAF,IAAYX,UAAU,CAACI,YAAD,CAA5B;EACA,MAAM;IAAEQ;EAAF,IAAeZ,UAAU,CAACG,eAAD,CAA/B;EACA,MAAM;IAAEU,iBAAF;IAAqBC;EAArB,IAA4CH,KAAlD,CAL6C,CAO7C;;EACA,SAASI,oBAAT,GAAgC;IAC9BL,OAAO,CAAC,CAACD,IAAF,CAAP;EACD;;EAED,oBACE;IAAA,wBACE,QAAC,MAAD;MACE,OAAO,EAAG,kBAAiBA,IAAI,IAAI,QAAS,IAC1CK,kBAAkB,CAACE,MAAnB,GAA4B,CAA5B,IAAiC,UAClC,EAHH;MAIE,OAAO,EAAED,oBAJX;MAKE,SAAS,EAAG,wBALd;MAAA,wBAOE;QAAM,IAAI,EAAC,KAAX;QAAiB,cAAW;MAA5B;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAYGN,IAAI,iBACH,QAAC,MAAD,CAAQ,GAAR;MACE,SAAS,EAAC,kBADZ;MAEE,OAAO,EAAE;QAAEQ,OAAO,EAAE;MAAX,CAFX;MAGE,OAAO,EAAE;QAAEA,OAAO,EAAE;MAAX,CAHX;MAIE,IAAI,EAAE;QAAEA,OAAO,EAAE;MAAX,CAJR;MAKE,UAAU,EAAE;QAAEC,IAAI,EAAE;MAAR,CALd;MAAA,UAOGL,iBAAiB,CAACM,GAAlB,CAAuBC,QAAD,iBACrB,QAAC,QAAD;QAAA,uBACE,QAAC,MAAD;UACE,OAAO,EAAE,MACPR,QAAQ,CAAC;YACPS,IAAI,EAAEf,QAAQ,CAACgB,uBADR;YAEPC,IAAI,EAAEH,QAAQ,CAACI;UAFR,CAAD,CAFZ;UAOE,OAAO,EAAG,YACRV,kBAAkB,CAACW,QAAnB,CAA4BL,QAAQ,CAACI,GAArC,KAA6C,QAC9C,EATH;UAUE,YAAUJ,QAAQ,CAACI,GAVrB;UAAA,wBAYE;YACE,SAAS,EAAC,OADZ;YAEE,IAAI,EAAC,UAFP;YAGE,cAAW;UAHb;YAAA;YAAA;YAAA;UAAA,QAZF,EAiBGtB,UAAU,CAACkB,QAAQ,CAACM,IAAV,CAjBb,eAkBE;YACE,SAAS,EAAC,MADZ;YAEE,KAAK,EAAE;cAAEC,eAAe,EAAEP,QAAQ,CAACQ;YAA5B;UAFT;YAAA;YAAA;YAAA;UAAA,QAlBF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF,GAAeR,QAAQ,CAACI,GAAxB;QAAA;QAAA;QAAA;MAAA,QADD;IAPH;MAAA;MAAA;MAAA;IAAA,QAbJ;EAAA,gBADF;AAoDD;;GAhEuBhB,oB;;KAAAA,oB"},"metadata":{},"sourceType":"module"}