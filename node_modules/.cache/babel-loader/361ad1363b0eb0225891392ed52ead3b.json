{"ast":null,"code":"import _toConsumableArray from\"/Users/harryedwards/Work/FL/_examples/mapping/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";export default function updateActiveCategories(tid,toUpdate,mapRef){var activeFilters=_toConsumableArray(toUpdate);var matchingTerm=activeFilters.indexOf(tid);// If tid is present remove it, else add it to array\nif(matchingTerm>-1){activeFilters.splice(matchingTerm,1);}else{var _mapRef$current;activeFilters.push(tid);// Scroll to map\nmapRef&&((_mapRef$current=mapRef.current)===null||_mapRef$current===void 0?void 0:_mapRef$current.scrollIntoView({behavior:'smooth'}));}return activeFilters;}","map":{"version":3,"names":["updateActiveCategories","tid","toUpdate","mapRef","activeFilters","matchingTerm","indexOf","splice","push","current","scrollIntoView","behavior"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/hooks/updateActiveCategories.ts"],"sourcesContent":["export default function updateActiveCategories(\n  tid: number,\n  toUpdate: number[],\n  mapRef: React.RefObject<HTMLElement> | null\n) {\n  const activeFilters = [...toUpdate]\n  const matchingTerm = activeFilters.indexOf(tid)\n\n  // If tid is present remove it, else add it to array\n  if (matchingTerm > -1) {\n    activeFilters.splice(matchingTerm, 1)\n  } else {\n    activeFilters.push(tid)\n\n    // Scroll to map\n    mapRef && mapRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n  return activeFilters\n}\n"],"mappings":"2IAAA,cAAe,SAASA,uBAAT,CACbC,GADa,CAEbC,QAFa,CAGbC,MAHa,CAIb,CACA,GAAMC,cAAa,oBAAOF,QAAP,CAAnB,CACA,GAAMG,aAAY,CAAGD,aAAa,CAACE,OAAd,CAAsBL,GAAtB,CAArB,CAEA;AACA,GAAII,YAAY,CAAG,CAAC,CAApB,CAAuB,CACrBD,aAAa,CAACG,MAAd,CAAqBF,YAArB,CAAmC,CAAnC,EACD,CAFD,IAEO,qBACLD,aAAa,CAACI,IAAd,CAAmBP,GAAnB,EAEA;AACAE,MAAM,oBAAIA,MAAM,CAACM,OAAX,0CAAI,gBAAgBC,cAAhB,CAA+B,CAAEC,QAAQ,CAAE,QAAZ,CAA/B,CAAJ,CAAN,CACD,CACD,MAAOP,cAAP,CACD"},"metadata":{},"sourceType":"module"}