{"ast":null,"code":"import _objectSpread from\"/Users/harryedwards/Work/FL/_examples/mapping/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/harryedwards/Work/FL/_examples/mapping/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/harryedwards/Work/FL/_examples/mapping/node_modules/@babel/runtime/regenerator/index.js\";import{baseUrl}from'../helpers';import{AppState}from'../utils/types';export default function getData(_x,_x2,_x3){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,categories,routes){var filteredMarkersApi,filteredRoutesApi,getMarkers,getRoutes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:filteredMarkersApi=\"\".concat(baseUrl,\"/markers/\").concat(categories);filteredRoutesApi=\"\".concat(baseUrl,\"/routes/\").concat(routes);getMarkers=fetch(filteredMarkersApi).then(function(blob){return blob.json();}).then(function(data){// Add data to markers array.\nvar markerData=Object.values(data);// Get marker data\nvar mapMarkers=markerData.map(function(marker){var _marker$categories;var markerCategories=(_marker$categories=marker.categories)===null||_marker$categories===void 0?void 0:_marker$categories.map(function(category){return category.tid;});return{lat:marker.lat,lng:marker.lng,position:[parseFloat(marker===null||marker===void 0?void 0:marker.lat),parseFloat(marker.lng)],summary:marker.summary,content:marker.content,distance:marker.distance,postcode:marker.postcode,accessibility_terrain_walk_info:marker.accessibility_terrain_walk_info,facilities_accessibility:marker.facilities_accessibility,id:marker.id,title:marker.title,image:marker.image,imageAlt:marker.imageAlt,categories:markerCategories,links:marker.links,download:marker.download};});// Get taxo data\n// Get user provided term IDs and convert to array of tid ints\nvar chosenCategories=categories.split(',').map(function(tid){return+tid;});var mapCategoryParents=markerData.map(function(marker){return marker.categories.filter(function(term){return term.parent===0;});}).flat()// Remove duplicates\n.filter(function(termToCheck,i,terms){return terms.findIndex(function(term){return term.tid===termToCheck.tid;})===i;})// Only add user chosen categories to array\n.filter(function(parentCat){return chosenCategories.includes(parentCat.tid);});// Combine parent & child categories to form filters, removing any that aren't in the list provided by the user\nvar categoryData=mapCategoryParents// Find child terms & add to parent term object\n.map(function(category){var childTerms=markerData.map(function(marker){return marker.categories.filter(function(term){return term.parent!==0;});}).flat()// Remove duplicates\n.filter(function(termToCheck,i,terms){return terms.findIndex(function(term){return term.tid===termToCheck.tid;})===i;})// Filter to children of the parent term\n.filter(function(childTerm){return category.tid===childTerm.parent;});return _objectSpread(_objectSpread({},category),{},{children:childTerms});});dispatch({type:AppState.SET_DATA,mode:mapMarkers});dispatch({type:AppState.SET_CATEGORIES,mode:categoryData});}).catch(function(err){dispatch({type:AppState.ERROR,mode:true});throw Error(err);});if(routes){getRoutes=fetch(filteredRoutesApi).then(function(blob){return blob.json();}).then(function(data){// Add data to routes array.\nvar routeData=Object.values(data);// Get route data\nvar mapRoutes=routeData.map(function(route){var _route$categories;var routeCategories=(_route$categories=route.categories)===null||_route$categories===void 0?void 0:_route$categories.map(function(category){return category.tid;});return{shape_file:route.shape_file,summary:route.summary,content:route.content,distance:route.distance,postcode:route.postcode,accessibility_terrain_walk_info:route.accessibility_terrain_walk_info,facilities_accessibility:route.facilities_accessibility,id:route.id,title:route.title,image:route.image,imageAlt:route.imageAlt,categories:routeCategories,links:route.links,download:route.download};});// Get taxo data\nvar chosenCategories=routes.split(',').map(function(tid){return+tid;});var categoryData=routeData.map(function(route){return route.categories.filter(function(term){return term.parent===0;});}).flat()// Remove duplicates\n.filter(function(termToCheck,i,terms){return terms.findIndex(function(term){return term.tid===termToCheck.tid;})===i;})// Only add user chosen categories to array\n.filter(function(parentCat){return chosenCategories.includes(parentCat.tid);});dispatch({type:AppState.SET_ROUTES,mode:mapRoutes});dispatch({type:AppState.SET_ROUTE_CATEGORIES,mode:categoryData});}).catch(function(err){dispatch({type:AppState.ERROR,mode:true});throw Error(err);});}_context.t0=Promise;_context.next=7;return getMarkers;case 7:_context.t1=_context.sent;if(!routes){_context.next=14;break;}_context.next=11;return getRoutes;case 11:_context.t2=_context.sent;_context.next=15;break;case 14:_context.t2=null;case 15:_context.t3=_context.t2;_context.t4=[_context.t1,_context.t3];_context.next=19;return _context.t0.all.call(_context.t0,_context.t4).then(function(){dispatch({type:AppState.IS_LOADING,mode:false});}).catch(function(err){dispatch({type:AppState.ERROR,mode:true});throw Error(err);});case 19:case\"end\":return _context.stop();}}},_callee);}));return _getData.apply(this,arguments);}","map":{"version":3,"names":["baseUrl","AppState","getData","dispatch","categories","routes","filteredMarkersApi","filteredRoutesApi","getMarkers","fetch","then","blob","json","data","markerData","Object","values","mapMarkers","map","marker","markerCategories","category","tid","lat","lng","position","parseFloat","summary","content","distance","postcode","accessibility_terrain_walk_info","facilities_accessibility","id","title","image","imageAlt","links","download","chosenCategories","split","mapCategoryParents","filter","term","parent","flat","termToCheck","i","terms","findIndex","parentCat","includes","categoryData","childTerms","childTerm","children","type","SET_DATA","mode","SET_CATEGORIES","catch","err","ERROR","Error","getRoutes","routeData","mapRoutes","route","routeCategories","shape_file","SET_ROUTES","SET_ROUTE_CATEGORIES","Promise","all","IS_LOADING"],"sources":["/Users/harryedwards/Work/FL/_examples/mapping/src/data/getData.ts"],"sourcesContent":["import { baseUrl } from '../helpers'\nimport { AppState, StateAction } from '../utils/types'\nimport { LinkEntity, TaxonomyEntity } from '../utils/types'\n\n// type Props = {\n//   categories: string\n// }\n\ninterface MapEntityRaw {\n  summary?: string | null\n  content?: string | null\n  distance?: string | null\n  postcode?: string | null\n  accessibility_terrain_walk_info?: string | null\n  facilities_accessibility?: string | null\n  id?: number | null\n  title?: string | null\n  image?: boolean | null\n  imageAlt?: boolean | null\n  categories?: TaxonomyEntity[] | null\n  links?: LinkEntity[] | null\n  download?: string | null\n}\n\ninterface MarkerRaw extends MapEntityRaw {\n  lat?: string | null\n  lng?: string | null\n}\ninterface RouteRaw extends MapEntityRaw {\n  shape_file: string\n}\n\nexport default async function getData(\n  dispatch: React.Dispatch<StateAction>,\n  categories: string,\n  routes: string\n) {\n  const filteredMarkersApi = `${baseUrl}/markers/${categories}`\n  const filteredRoutesApi = `${baseUrl}/routes/${routes}`\n\n  const getMarkers = fetch(filteredMarkersApi)\n    .then(blob => blob.json())\n    .then(data => {\n      // Add data to markers array.\n      const markerData = Object.values(data)\n\n      // Get marker data\n      const mapMarkers = markerData.map((marker: any) => {\n        const markerCategories = marker.categories?.map(\n          (category: TaxonomyEntity) => {\n            return category.tid\n          }\n        )\n\n        return {\n          lat: marker.lat,\n          lng: marker.lng,\n          position: [parseFloat(marker?.lat), parseFloat(marker.lng)],\n          summary: marker.summary,\n          content: marker.content,\n          distance: marker.distance,\n          postcode: marker.postcode,\n          accessibility_terrain_walk_info:\n            marker.accessibility_terrain_walk_info,\n          facilities_accessibility: marker.facilities_accessibility,\n          id: marker.id,\n          title: marker.title,\n          image: marker.image,\n          imageAlt: marker.imageAlt,\n          categories: markerCategories,\n          links: marker.links,\n          download: marker.download,\n        }\n      })\n\n      // Get taxo data\n      // Get user provided term IDs and convert to array of tid ints\n      const chosenCategories = categories.split(',').map(tid => +tid)\n\n      const mapCategoryParents = markerData\n        .map((marker: any) => {\n          return marker.categories.filter((term: any) => term.parent === 0)\n        })\n        .flat()\n        // Remove duplicates\n        .filter(\n          (termToCheck: TaxonomyEntity, i: number, terms: TaxonomyEntity[]) =>\n            terms.findIndex(\n              (term: TaxonomyEntity) => term.tid === termToCheck.tid\n            ) === i\n        )\n        // Only add user chosen categories to array\n        .filter((parentCat: TaxonomyEntity) =>\n          chosenCategories.includes(parentCat.tid)\n        )\n\n      // Combine parent & child categories to form filters, removing any that aren't in the list provided by the user\n      const categoryData = mapCategoryParents\n        // Find child terms & add to parent term object\n        .map((category: TaxonomyEntity) => {\n          const childTerms = markerData\n            .map((marker: any) => {\n              return marker.categories.filter(\n                (term: TaxonomyEntity) => term.parent !== 0\n              )\n            })\n            .flat()\n            // Remove duplicates\n            .filter(\n              (\n                termToCheck: TaxonomyEntity,\n                i: number,\n                terms: TaxonomyEntity[]\n              ) =>\n                terms.findIndex(\n                  (term: TaxonomyEntity) => term.tid === termToCheck.tid\n                ) === i\n            )\n            // Filter to children of the parent term\n            .filter(\n              (childTerm: TaxonomyEntity) => category.tid === childTerm.parent\n            )\n\n          return {\n            ...category,\n            children: childTerms,\n          }\n        })\n\n      dispatch({ type: AppState.SET_DATA, mode: mapMarkers })\n      dispatch({ type: AppState.SET_CATEGORIES, mode: categoryData })\n    })\n    .catch(err => {\n      dispatch({ type: AppState.ERROR, mode: true })\n      throw Error(err)\n    })\n\n  let getRoutes\n\n  if (routes) {\n    getRoutes = fetch(filteredRoutesApi)\n      .then(blob => blob.json())\n      .then(data => {\n        // Add data to routes array.\n        const routeData = Object.values(data)\n\n        // Get route data\n        const mapRoutes = routeData.map((route: any) => {\n          const routeCategories = route.categories?.map(\n            (category: TaxonomyEntity) => {\n              return category.tid\n            }\n          )\n\n          return {\n            shape_file: route.shape_file,\n            summary: route.summary,\n            content: route.content,\n            distance: route.distance,\n            postcode: route.postcode,\n            accessibility_terrain_walk_info:\n              route.accessibility_terrain_walk_info,\n            facilities_accessibility: route.facilities_accessibility,\n            id: route.id,\n            title: route.title,\n            image: route.image,\n            imageAlt: route.imageAlt,\n            categories: routeCategories,\n            links: route.links,\n            download: route.download,\n          }\n        })\n\n        // Get taxo data\n        const chosenCategories = routes.split(',').map(tid => +tid)\n\n        const categoryData = routeData\n          .map((route: any) => {\n            return route.categories.filter(\n              (term: TaxonomyEntity) => term.parent === 0\n            )\n          })\n          .flat()\n          // Remove duplicates\n          .filter(\n            (termToCheck: TaxonomyEntity, i: number, terms: TaxonomyEntity[]) =>\n              terms.findIndex(\n                (term: TaxonomyEntity) => term.tid === termToCheck.tid\n              ) === i\n          )\n          // Only add user chosen categories to array\n          .filter((parentCat: TaxonomyEntity) =>\n            chosenCategories.includes(parentCat.tid)\n          )\n\n        dispatch({ type: AppState.SET_ROUTES, mode: mapRoutes })\n        dispatch({ type: AppState.SET_ROUTE_CATEGORIES, mode: categoryData })\n      })\n      .catch(err => {\n        dispatch({ type: AppState.ERROR, mode: true })\n        throw Error(err)\n      })\n  }\n\n  await Promise.all([await getMarkers, routes ? await getRoutes : null])\n    .then(() => {\n      dispatch({ type: AppState.IS_LOADING, mode: false })\n    })\n    .catch(err => {\n      dispatch({ type: AppState.ERROR, mode: true })\n      throw Error(err)\n    })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}